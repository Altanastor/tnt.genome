host: 127.0.0.1
port: 4001
safe: true
highlighter: pygments
baseurl : /tnt.genome
api :
    - name : genome
      elements :
           - name : genome
             preamble : |
                        The genome board is a special type of board that <i>inherits</i> all its elements. A new genome board can be created using <a href="">tnt.board.genome</a>. An example of use looks like:
             example : |
                // Giving species and gene name
                var genome = tnt.board.genome()
                    .species("human")
                    .gene("brca2")
                    .width(950);

                // Giving an ensembl ID (no species needed)
                var genome = tnt.board.genome()
                    .gene("ENSG00000012048");

                // Giving a genomic region
                var genome = tnt.board.genome()
                    .species("human")
                    .chr(13)
                    .from(30665877)
                    .to(31380905);

             elements :
                - name : genome
                  path : tnt.board
                  args : null
                  desc : creates a new genome board
                  full : Creates a new genome board that can be configured using the methods explained below. The returned <i>genome</i> is a function itself that can be called passing a DOM element as its argument. This DOM element is used as a container for the visualization.
                  example : |
                    var genome = tnt.board.genome();
                    genome (document.getElementById ('my_div'));

                - name : species
                  path : genome
                  args : string
                  desc : sets the species for the genome board
                  full : Sets the species for the genome board. Only species included in the <a href="">Ensembl project</a> are supported. Both scientific names (ie, "homo_sapiens") and common names ("human") are allowed. When called without arguments returns the current species. By default the species is "human".
                  example : |
                    var genome = tnt.board.genome()
                        .species("mus_musculus");

                - name : chr
                  path : genome
                  args : integer
                  desc : sets the chromosome for the visualisation
                  full : Sets the chromosome for the visualisation. When called without arguments returns the current chromosome.
                  example : |
                    var genome = tnt.board.genome()
                        .chr(13);

                - name : gene
                  path : genome
                  args : string
                  desc : sets the gene to show in the genome visualisation
                  full : Sets the gene to show in the genome visualisation. This gene can be a gene name (for example, "BRCA2") or an ensembl ID ("ENSG00000139618"). If the former is provided it is also needed to specify the <a href="#species">species</a> since the gene name is not unique among species. When called without arguments returns the current gene.
                  example : |
                    var genome = tnt.board.genome()
                        .species("human")
                        .gene("BRCA2");

                - name : expand
                  path : genome
                  args : integer
                  desc : sets extra space in the visualisation
                  full : Sets extra space in the visualisation when the <a href="#gene">gene</a> method is used. Instead of starting the visualisation exactly on the given gene some extra space is given. The argument to the function is the the percentage of the given extent that needs to be added to both ends of the genome board.
                  example : |
                    var genome = tnt.board.genome()
                        .species("human")
                        .gene("BRCA2")
                        .expand(25); // extends the board to cover 25% more genome space to both sides


           - name : Feature
             preamble : |
                TnT Genome provides 3 new features for genes, transcripts and genomic sequences ready to use. They understand the data elements fetched by their corresponding data retrievers explained below. These features are attached to the tnt.board.track.feature.genome object
             example : |
                var gene_track = tnt.board.track()
                    .height(200)
                    .color("white")
                    .display(tnt.board.track.feature.genome.gene()
                        .color("#550055")
                    )
                    .data(tnt.board.track.data.genome.gene());

                var sequence_track = tnt.board.track()
                        .height(30)
                        .background_color("white")
                        .display(tnt.board.track.feature.genome.sequence())
                        .data(tnt.board.track.data.genome.sequence()
                            .limit(150)
                        );

             elements :
                - name : gene
                  path : tnt.board.track.feature.genome
                  args : null
                  desc : creates a new <i>gene</i> feature
                  full : Creates a new <i>gene</i> feature. This feature has the same properties and elements as any other TnT Board feature. This feature understands the elements retrieved by the <i>gene</i> data retriever.
                  example : |
                    var gene_display = tnt.board.track.feature.genome.gene();

                - name : transcript
                  path : tnt.board.track.feature.genome
                  args : null
                  desc : creates a new <i>transcript</i> feature
                  full : Creates a new <i>transcript</i> feature. This feature has the same properties and elements as any other TnT Board feature. This feature understands the elements retrieved by the <i>transcript</i> data retriever.
                  example : |
                    var transcript_display = tnt.board.track.feature.genome.transcript();

                - name : sequence
                  path : tnt.board.track.feature.sequence
                  args : null
                  desc : creates a new <i>sequence</i> feature
                  full : Creates a new <i>sequence</i> feature. This feature has the same properties and elements as any other TnT Board feature. This feature understands the elements retrieved by the <i>sequence</i> data retriever.
                  example : |
                    var sequence_display = tnt.board.track.feature.genome.sequence();


           - name : Data
             preamble : TnT Board provides an interface to the Ensembl REST API to fetch genome data. This interface uses tnt.board.track.data.async under the hood, which means that are <i>promises</i> that can be chained with use-defined functions. The fetched elements are pluggable directly to their corresponding features explained above. These data retrievers are attached to the tnt.board.track.data.genome object
             example : |
                var gene_track = tnt.board.track()
                    .height(200)
                    .color("white")
                    .display(tnt.board.track.feature.genome.gene()
                        .color("#550055")
                    )
                    .data(tnt.board.track.data.genome.gene());

                var sequence_track = tnt.board.track()
                        .height(30)
                        .background_color("white")
                        .display(tnt.board.track.feature.genome.sequence())
                        .data(tnt.board.track.data.genome.sequence()
                            .limit(150)
                        );

             elements :
                - name : gene
                  path : tnt.board.track.data.genome
                  args : null
                  desc : creates a new gene retriever
                  full : Creates a new gene retriever using the Ensembl REST API. Returns a <i>promise</i> that can be chained with other user-defined functions.
                  example : |
                    var gene_data = tnt.board.track.data.genome.gene();

                - name : transcript
                  path : tnt.board.track.data.genome
                  args : null
                  desc : creates a new transcript retriever
                  full : Creates a new transcript retriever using the Ensembl REST API. Returns a <i>promise</i> that can be chained with other user-defined functions.
                  example : |
                    var transcript_data = tnt.board.track.data.genome.transcript();

                - name : sequence
                  path : tnt.board.track.data.sequence
                  args : null
                  desc : creates a new sequence retriever
                  full : Creates a new sequence retriever using the Ensembl REST API. Returns a <i>promise</i> that can be chained with other user-defined functions.
                  example : |
                    var sequence_data = tnt.board.track.genome.sequence();

                - name : limit
                  path : sequence
                  args : integer
                  desc : sets a limit for returning the genomic sequence
                  full : Sets a limit for returning the genomic sequence. If the length of the sequence to retrieve is greater than the limit, nothing is returned or displayed. By default, this limit is set to 150. If called without arguments returns the current limit
                  example : |
                    var sequence_data = tnt.board.track.genome.sequence()
                        .limit (200);

           - name : Layout
             preamble : The layout analyses all the genes, transcripts and labels in a track and distributes them vertically to avoid overlaps. It is run after the data is retrieved and before the features are displayed. It also supports several configuration methods explained below.

             elements :
                - name : layout
                  path : display
                  args : tnt.board.track.layout
                  desc : sets a layout for the elements of a track
                  full : Sets a layout for the elements of a track. It accepts a tnt.board.track.layout as its argument. When called without arguments returns the current layout. In TnT Genome the layout is set to tnt.board.track.layout.feature by default, that avoids overlaps between elements to display (and their labels). This method is specially useful to configure this default layout.
                  example : |
                    // expand or contract the height of the gene track as needed
                    var curr_layout = gene_track.display().layout();
                    curr_layout
                        .fixed_slot_type("expanded")
                        .keep_slots(false)
                        .on_layout_run (function (types, current) {
                            var needed_height = types.expanded.needed_slots * types.expanded.slot_height;
                            if (needed_height !== current_height) {
                                current_height = needed_height;
                                gene_track.height(needed_height);
                                genome.tracks(genome.tracks());
                            }
                        });

                - name : fixed_slot_type
                  path : layout.feature
                  args : string
                  desc : specifies if the layout should always keep one slot type
                  full : Specifies if the layout should always keep one slot type. By default the layout shows <i>genes</i> with label and 10px height if they all fit in the current board (<i>expanded</i> slot type) and <i>condensed</i> genes witout labels and only 5px height if they don't (<i>collapsed slot type</i>). Setting this option to "expanded" the <i>genes</i> will always be shown in the former form. Using "collapsed" as its argument uses always the latter.
                  example : |
                    gene_track.display().layout()
                        .fixed_slot_type("expanded");

                - name : keep_slots
                  path : layout.feature
                  args : boolean
                  desc : specifies if the elements should keep vertical positions between updates
                  full : Specifies if the elements should keep vertical positions between updates. By default this is set to <i>true</i> which means that elements (genes or transcripts) that are in display between two updates will keep their vertical position. Once they go out of sight, they are removed from the track. If this option is set to <i>false</i> the layout recomputes the positions of the elements (genes or transcripts) on every data update.
                  example : |
                    gene_track.display().layout()
                        .keep_slots(false);

                - name : on_layout_run
                  path : layout.feature
                  args : callback
                  desc : sets a callback to be run after the layout has finished positioning elements
                  full : Sets a callback to be run after the layout has finished positioning elements. That callback is called with the two <i>slot types</i> described above and the one currently used.
                  example : |
                    gene_track.display().layout()
                        .on_layout_run (function (types, current) {
                            var needed_height = types.expanded.needed_slots * types.expanded.slot_height;
                            if (needed_height !== current_height) {
                                current_height = needed_height;
                                gene_track.height(needed_height);
                                genome.tracks(genome.tracks());
                            }
                        });
